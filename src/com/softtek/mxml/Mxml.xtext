grammar com.softtek.mxml.Mxml with org.eclipse.xtext.common.Terminals

generate mxml "http://www.softtek.com/mxml/Mxml"



Model:
  (project=Project)?
  (files+=File)* 
;

FileRef:
	'file' file_ref=[Node|QualifiedName] path_ref=STRING
;
 
Project :
 'project' name=ID '{' 
 	'description' ':' title=STRING
 	(files += FileRef)+
 '}'
;

File:
	initialnode=INITNODE
	nodes+=Node*;
	
QualifiedName:
  ID ('.' ID)*
;

terminal INITNODE:
    '<?' -> '?>'
;


@Override
terminal ML_COMMENT:
    (('<!--'|'<![') -> ('-->'|']]>') )  //| '<'ID':Script>' -> '</'ID':Script>')
 ;


@Override
terminal SL_COMMENT: 
    '[' !('\n'|'\r')* ('\r'? '\n')?
;

@Override 
terminal ID: 
    ('a'..'z'|'A'..'Z'|'0'..'9') ('a'..'z'|'A'..'Z'|'0'..'9'|'@'| '_' |'.')*; 

Node:
 (SimpleNodeNoPrefix | SimpleNode | ComplexNodeNoPrefix | ComplexNode)
;   
 
SimpleNode:
   '<' prefix=ID ':' name=ID (attrs+=Attr*) ('/>')
;

ComplexNode:
   '<' prefix=ID  ':' name=ID (attrs+=Attr*) ('>')
    nodes+=Node*
   ('</' ID ':' ID ('>'))
;

SimpleNodeNoPrefix:
   prefix='<' name=ID (attrs+=Attr*) ('/>')
;

ComplexNodeNoPrefix:
   prefix='<' name=ID (attrs+=Attr*) ('>')
    nodes+=Node*
   ('</' ID '>')
;
  
Attr:
	(ns=ID':')? key=ID '=' value=STRING
;
